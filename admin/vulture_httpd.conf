{% load split %}

ServerRoot {{ serverroot }}

ServerName localhost

ServerTokens Prod
ServerSignature Off

Timeout 300
KeepAlive On
MaxKeepAliveRequests 100
KeepAliveTimeout 15

StartServers            5
MinSpareServers         5
MaxSpareServers         10
MaxClients              150
MaxRequestsPerChild     1000

PidFile {{ VultureConfPath }}{{ intf.id }}.pid

user {{ www_user }}
group {{ www_user }}

LoadFile                        /usr/lib/libxml2.so.2
LoadModule perl_module          {{ serverroot }}/modules/mod_perl.so
LoadModule apreq_module    {{ serverroot }}/modules/mod_apreq2.so
LoadModule env_module           {{ serverroot }}/modules/mod_env.so
{{ httpd_custom|safe }}
LoadModule proxy_balancer_module        {{ serverroot }}/modules/mod_proxy_balancer.so
{% if MS_path.value %}
LoadModule security2_module {{ MS_path.value }}
{% else %}
LoadModule security2_module  {{ serverroot }}/modules/mod_security2.so
{% endif %}
LoadModule headers_module       {{serverroot}}/modules/mod_headers.so
LoadModule unique_id_module     {{serverroot}}/modules/mod_unique_id.so
SecDataDir {{ VultureConfPath }}security-rules/

PerlSwitches {{ PerlSwitches }}

BrowserMatch "Mozilla/2" nokeepalive
BrowserMatch "MSIE 4\.0b2;" nokeepalive downgrade-1.0 force-response-1.0
BrowserMatch "RealPlayer 4\.0" force-response-1.0
BrowserMatch "Java/1\.0" force-response-1.0
BrowserMatch "JDK/1\.0" force-response-1.0
BrowserMatch "Microsoft Data Access Internet Publishing Provider" redirect-carefully
BrowserMatch "^WebDrive" redirect-carefully
BrowserMatch "^gnome-vfs" redirect-carefully
BrowserMatch "^WebDAVFS" redirect-carefully

AddDefaultCharset off

PerlOptions +GlobalRequest
PerlModule Apache2::Reload
PerlInitHandler Apache2::Reload

PerlSetVar ReloadAll                    Off

PerlSetVar VultureDSNv3                 dbi:SQLite:dbname={{ dbname }}
PerlSetVar VultureID                    {{ intf.id }}
PerlSetVar VultureAppCookieName         vulture_app
PerlSetVar VultureProxyCookieName       vulture_proxy
PerlSetVar VultureConfPath          {{ VultureConfPath }}
PerlSetVar VultureStaticPath        {{ VultureStaticPath }}

Listen {{ intf.ip }}:{{ intf.port }}
NameVirtualHost {{ intf.ip }}:{{ intf.port }}

LogLevel warn

LogLevel {{ intf.log.level|safe }}
ErrorLog {{ intf.log.dir|safe }}Vulture-{{ intf.ip|safe }}-error_log

{% if ssl %}
    SSLSessionCache dbm:{{ VultureConfPath }}{{ intf.id }}.sslcache
    SSLRandomSeed startup builtin
    SSLRandomSeed connect builtin
{% endif %}

## Custom defined virtualhost directives for intf
{{ intf.virtualhost_directives|safe }}

SetEnvIf Remote_Addr "127.0.0.1" local
SetEnvIf Remote_Addr "::1" local
SetEnvIf Remote_Addr {{ intf.ip|safe }} local

{% for name,a in app_list.items %}

    <VirtualHost {{ intf.ip|safe }}:{{ intf.port|safe }}>
        ServerName {{ name }}

        LogLevel {{ a.0.log.level|safe }}
        LogFormat {{ a.0.log.format|safe }} vultureFormat
        ErrorLog {{ a.0.log.dir|safe }}Vulture-{{ a.0.name|cut:"/" }}-error_log
        CustomLog {{ a.0.log.dir|safe }}Vulture-{{ a.0.name|cut:"/" }}-access_log vultureFormat env=!local
        SSLProxyEngine On

        {% if a.0.isFtp %}
            SetEnv force-proxy-request-1.0 1
            SetEnv proxy-nokeepalive 1
        {% endif %}

        {% if a.0.remote_proxy %}
            ProxyRemote * {{ a.0.remote_proxy }}
            AllowCONNECT 443
        {% endif %}

        {% if a.0.isWildCard or a.0.hasHeaderHost %}
            ProxyPreserveHost On
        {% endif %}

        {% if a.0.remote_proxy_SSLProxyMachineCertificateFile %}
            SSLProxyMachineCertificateFile {{ a.0.remote_proxy_SSLProxyMachineCertificateFile }}
        {% endif %}
        {% if a.0.remote_proxy_SSLProxyCACertificateFile %}
            SSLProxyCACertificateFile {{ a.0.remote_proxy_SSLProxyCACertificateFile }}
        {% endif %}
        {% if a.0.remote_proxy_SSLProxyCARevocationFile %}
            SSLProxyCARevocationFile  {{ a.0.remote_proxy_SSLProxyCARevocationFile }}
        {% endif %}
        {% if a.0.remote_proxy_SSLProxyVerify %}
            SSLProxyVerify {{ a.0.remote_proxy_SSLProxyVerify }}
        {% endif %}

        SetHandler perl-script
        <Location />
            PerlAuthenHandler Core::AuthenHandler
            PerlAuthzHandler  Core::AuthzHandler
            AuthType basic
            AuthName "Please Authenticate"
            Require valid-user
        </Location>
        {% if intf.hasBlackIp %}
            PerlPreConnectionHandler Core::PreConnectionHandler
        {% endif %}
        PerlTransHandler Core::TransHandlerv2
        PerlFixupHandler Core::FixupHandler
        PerlResponseHandler Core::ResponseHandlerv2
        {% if intf.cert %}
            SSLEngine               On
            PerlModule              Apache::SSLLookup

            {% if intf.ssl_engine %}
                SSLCryptoDevice {{ intf.ssl_engine }}
            {% endif %}
            SSLCertificateKeyFile   {{ VultureConfPath }}{{ intf.id }}.key
            SSLCertificateFile      {{ VultureConfPath }}{{ intf.id }}.crt
            {% if intf.ca %}
                SSLCertificateChainFile {{ VultureConfPath }}{{ intf.id }}.chain
            {% endif %}
            {% if intf.cacert %}
                SSLCACertificateFile {{ VultureConfPath }}{{ intf.id}}.cacrt
            {% endif %}

            SSLOptions              +StdEnvVars
            SSLProtocol -ALL +SSLv3 +TLSv1
        {% endif %}
        ProxyRequests Off
        ProxyVia Off
{% for app in a %}
            {% for auth in app.auth.all %}
                {% if auth.is_ssl %}
                    {% with app.name|mysplit:"/" as parts %}
                    SSLCACertificateFile {{ VultureConfPath }}{{ intf.id }}-{{ parts.0 }}.ca
                {% endwith %}
                {% endif %}
            {% endfor %}
        {% if app.Balancer_Activated %}
                <proxy {{ app.Balancer_Name }}>
                        {% with app.Balancer_Node|mysplit:";" as Nodes %}
                                {% for Node in Nodes %}
                                        BalancerMember {{ Node }}
                                {% endfor %}
                        {% endwith %}
                        ProxySet lbmethod={{ app.Balancer_Algo }}
                </proxy>
        {% endif %}
        {% if "/" in app.name %}{% with app.name|mysplit:"/" as parts %}
        ProxyPass        /{{ parts.1 }}/ {{app.url}} {% if app.Balancer_Stickyness %}stickysession={{ app.Balancer_Stickyness }} nofailover=Off {% endif %}
        <location /{{ parts.1 }}/ >
                {% endwith %}
                {% if app.hasBlackIp %}
                    PerlAccessHandler Core::AccessHandler
                {% endif %}
                {% if app.MS_Activated %}
                    SecWebAppId {{ app.name }}
                    SecAuditLog {{ app.log.dir|safe }}Vulture-{{ app.name|cut:"/" }}-security_log
                    Include  {{ VultureConfPath }}security-rules/activated/{{ app.name|cut:"/" }}/vulture-{{ app.name|cut:"/" }}.conf
                    Include  {{ VultureConfPath }}security-rules/activated/{{ app.name|cut:"/" }}/modsec*.conf
                {% endif %}
                ProxyPassReverse /
                {{ app.getCookieDomain }}
                {{ app.getCookiePath }}
                ## Custom defined virtualhost directives for app
                {{ app.virtualhost_directives|safe }}
        </location>
        {% else %}
                {% if app.hasBlackIp %}
                    PerlAccessHandler Core::AccessHandler
                {% endif %}
                {% if app.MS_Activated %}
                    SecWebAppId {{ app.name }}
                    SecAuditLog {{ app.log.dir|safe }}Vulture-{{ app.name|cut:"/" }}-security_log
                    Include  {{ VultureConfPath }}security-rules/activated/{{ app.name|cut:"/" }}/vulture-{{ app.name|cut:"/" }}.conf
                    Include  {{ VultureConfPath }}security-rules/activated/{{ app.name|cut:"/" }}/modsec*.conf
                {% endif %}
                ProxyPass        / {{ app.url }}/ {% if app.Balancer_Activated %}stickysession={{ app.Balancer_Stickyness }} nofailover=Off {% endif %}
                ProxyPassReverse / {{ app.url }}/
                {{ app.getCookieDomain }}

                ## Custom defined virtualhost directives for app
                {{ app.virtualhost_directives|safe }}
        {% endif %}
            {% for auth in app.auth.all %}
                {% if auth.is_ssl %}
                    SSLVerifyClient {{ auth.getAuth.require }}
                    SSLVerifyDepth 1
                {% endif %}
            {% endfor %}
{% endfor %}
        <Proxy *>
            SetHandler perl-script

            {% for auth in a.0.auth.all %}
                {% if auth.is_ssl %}
                    {{ auth.getAuth.constraint }}
                {% endif %}
            {% endfor %}
        </Proxy>
    </VirtualHost>
{% endfor %}
