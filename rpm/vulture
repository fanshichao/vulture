#!/bin/sh
#
# Vulture -- Reverse Proxy SSO
#
# chkconfig:   345 90 15
# description: Reverse Proxy SSO
# processname: 
# pidfile: /opt/vulture/conf/Vulture.pid

# Install this file in /etc/init.d and run "chkconfig vulture on" and
# "chkconfig --add vulture".

# Source function library.
if [ ! -r /etc/SuSE-release ]; then
          . /etc/init.d/functions
else
	daemon() {
		$1	
	}
fi


export VULTURE_HOME=/opt/vulture
export NAME=vulture
export TMPDIR=/tmp

# Source an auxiliary options file if we have one, and pick up OPTIONS,
if [ -r /etc/sysconfig/${NAME} ] ; then
	. /etc/sysconfig/${NAME}
fi


RETVAL=0

function start() {
	echo -n $"Starting ${NAME}: "
        daemon "/usr/sbin/httpd -f ${VULTURE_HOME}/${NAME}/conf/httpd.conf 2> /dev/null"
	echo
	[ $RETVAL -eq 0 ] && touch /var/lock/subsys/${NAME}
	return $RETVAL
}

function stop() {
        # Stop daemons.
	echo -n $"Stopping ${NAME}: "
        kill `cat ${VULTURE_HOME}/${NAME}/conf/vulture.pid`
	[ $RETVAL -eq 0 ] && success || failure
	echo
        [ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/${NAME}
	return $RETVAL
}

function status() {
        pidfile="${VULTURE_HOME}/${NAME}/conf/vulture.pid"
        if [ -s $pidfile ]; then
                pid=`cat $pidfile`
                kill -0 $pid >/dev/null 2>&1
                if [ "$?" = "0" ]; then
                        echo "${NAME} (pid $pid) is running"
                        RETVAL=0
                else
                        echo "${NAME} is stopped"
                        RETVAL=1
                fi
        else
                echo "${NAME} is stopped"
                RETVAL=1
        fi
	return $RETVAL
}

restart() {
	stop
	start
}

# See how we were called.
case "$1" in
	start)
		start
	;;
	stop)
		stop
	;;
	restart)
		restart
	;;
	condrestart)
		# Only restart if it is already running.
		status >/dev/null 2>&1 && restart
	;;
	reload)
		reload
	;;
	status)
		status
	;;
	*)
		echo "Usage: ${NAME} {start|stop|restart|status}"
		exit 1
	;;
esac

exit $RETVAL
