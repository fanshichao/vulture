diff -ruN Apache2-ModProxyPerlHtml-2.6.orig/ModProxyPerlHtml.pm Apache2-ModProxyPerlHtml-2.6/ModProxyPerlHtml.pm
--- Apache2-ModProxyPerlHtml-2.6.orig/ModProxyPerlHtml.pm	2010-07-01 18:09:06.212250888 +0200
+++ Apache2-ModProxyPerlHtml-2.6/ModProxyPerlHtml.pm	2010-07-01 18:10:27.872218521 +0200
@@ -101,17 +101,17 @@
 		my $encoding = $f->r->headers_in->{'Accept-Encoding'} || '';
 	       	# if Accept-Encoding: gzip,deflate try to uncompress
 		if ($encoding =~ /gzip|deflate/) {
-			use IO::Uncompress::AnyInflate qw(anyinflate $AnyInflateError) ;
-			my $output = '';
-			anyinflate  \$ctx->{data} => \$output or print STDERR "anyinflate failed: $AnyInflateError\n";
-			if ($ctx->{data} ne $output) {
-				$ctx->{data} = $output;
-			} else {
-				$encoding = '';
-			}
+#			use IO::Uncompress::AnyInflate qw(anyinflate $AnyInflateError) ;
+#			my $output = '';
+#			anyinflate  \$ctx->{data} => \$output or print STDERR "anyinflate failed: $AnyInflateError\n";
+#			if ($ctx->{data} ne $output) {
+#				$ctx->{data} = $output;
+#			} else {
+#				$encoding = '';
+#			}
 		}
 		
-		if ($content_type =~ /(text\/javascript|text\/html|text\/css|application\/.*javascript)/) {
+		if ($content_type =~ /(text\/javascript|text\/xml|text\/html|text\/css|application\/.*javascript)/) {
 			# Replace links if pattern match
 			foreach my $p (@{$ctx->{pattern}}) {
 				my ($match, $substitute) = split(/[\s\t]+/, $p);
@@ -127,15 +127,15 @@
 		}
 
 		if ($encoding =~ /gzip/) {
-			use IO::Compress::Gzip qw(gzip $GzipError) ;
-			my $output = '';
-			my $status = gzip \$ctx->{data} => \$output or die "gzip failed: $GzipError\n";
-			$ctx->{data} = $output;
+#			use IO::Compress::Gzip qw(gzip $GzipError) ;
+#			my $output = '';
+#			my $status = gzip \$ctx->{data} => \$output or die "gzip failed: $GzipError\n";
+#			$ctx->{data} = $output;
 		} elsif ($encoding =~ /deflate/) {
-			use IO::Compress::Deflate qw(deflate $DeflateError) ;
-			my $output = '';
-			my $status = deflate \$ctx->{data} => \$output or die "deflate failed: $DeflateError\n";
-			$ctx->{data} = $output;
+#			use IO::Compress::Deflate qw(deflate $DeflateError) ;
+#			my $output = '';
+#			my $status = deflate \$ctx->{data} => \$output or die "deflate failed: $DeflateError\n";
+#			$ctx->{data} = $output;
 		}
 		$f->ctx($ctx);
 
