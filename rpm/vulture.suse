#! /bin/sh

### BEGIN INIT INFO
# Provides:          httpd
# Required-Start:    $network 
# Required-Stop:     $network
# Should-Start:      
# Should-Stop:       
# Default-Start:     2 3 5
# Default-Stop:      0 1 6
# Short-Description: Vulture reverse proxy
# Description:       Vulture SSO reverse proxy
### END INIT INFO

# Vulture init script for openSUSE
#
# Author: Durand Fabrice <oeufdure@gmail.com>
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.

VULTURE_DESC="Vulture SSO reverse proxy"
VULTURE_USER=apache
VULTURE_HOME=/opt
NAME=vulture
TMPDIR=/tmp
MEMCACHED="${VULTURE_HOME}/${NAME}/bin/memcached"


VULTURE_SYSCONFIG=/etc/sysconfig/${NAME}
if [ -f $VULTURE_SYSCONFIG ]; then
    . $VULTURE_SYSCONFIG
fi

# Reset status of the service
. /etc/rc.status
rc_reset

case "$1" in
  start)
    echo -n "Starting $VULTURE_DESC "
	    for i in `ls ${VULTURE_HOME}/${NAME}/conf/*.conf 2> /dev/null`; do
			/sbin/startproc -u $VULTURE_USER ${VULTURE_HOME}/${NAME}/httpd/bin/httpd -f $i
			daemon ""
        done
        /sbin/startproc $MEMCACHED -d -m 512 -l 127.0.0.1 -p 9091 -u apache
    rc_status -v
    ;;
  stop)
    echo -n "Shutting down $VULTURE_DESC "
        for i in `ls ${VULTURE_HOME}/${NAME}/conf/*.pid 2> /dev/null`; do
                /sbin/killproc -p $i
        done
        /sbin/killproc $MEMCACHED
    rc_status -v
    ;;
  restart)
    $0 stop
    $0 start

    rc_status
    ;;
  reload)
        # vulture does not support reload on signal
        rc_failed 3
        rc_status -v
        ;;
  status)
    echo -n "Checking for $VULTURE_DESC "
		for i in `ls ${VULTURE_HOME}/${NAME}/conf/*.pid 2> /dev/null`; do
            /sbin/checkproc -p $i
        done

    rc_status -v
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|reload}"
    exit 1
    ;;
esac
rc_exit
